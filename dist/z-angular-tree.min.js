angular.module("z.angular.tree",[]).constant("treeConfig",{templateUrl:"zangular/template/zTreeTemplate.html"}).directive("zTree",["$timeout",function(e){return{restrict:"AE",template:"<div z-tree-node></div>",scope:{zTree:"=?",treeData:"=",currentSelect:"=?",options:"=?"},transclude:!0,controller:["$scope",function(n){n.$nodeChildren=[],n.$nodeMap={},n.options=angular.extend({childrenField:"children",leafNodeCanSelect:!0,canMultiple:!1,useToggle:!0},n.options),n.hasSelectNodeScopeList=[],n.$watch("hasSelectNodeScopeList",function(e,n){var o;if(n)for(o=0;o<n.length;o++)n[o].$model.$hasSelect=!1;if(e)for(o=0;o<e.length;o++)e[o].$model.$hasSelect=!0}),n.$watch("currentSelect",function(e,t){var r=o(e),l=o(t);if(l&&(l.$model.$selected=!1),r){r.$model.$selected=!0;var d=[];d.push(r),c(r,function(e){d.push(e)}),n.hasSelectNodeScopeList=d}}),n.node={},n.node[n.options.childrenField]=n.treeData,this.$treeRootScope=n,n.zTree={},n.zTree.selectNode=function(e){var t=o(e);n.options.canMultiple||(a(t)?n.currentSelect=t.node:n.options.leafNodeCanSelect||(n.currentSelect=t.node))},n.zTree.addChildNode=function(t,r){if(null!=r){var l=r[n.options.childrenField];null!=l&&void 0!=l&&l.push(t)}else n.treeData.push(t);e(function(){p(o(t))})},n.zTree.addAfterNode=function(e,t){var r=o(t),l=r.$parentNodeScope.node,c=l[n.options.childrenField];c.splice($.inArray(t,c)+1,0,e)},n.zTree.delNode=function(e,t){var r,c=o(e),d=c.$parentNodeScope.node,a=d[n.options.childrenField];r=t?t:$.inArray(e,a),a.splice(r,1),c.$parentNodeScope.$nodeChildren.splice(r,1),l(c,function(e){delete n.$nodeMap[e.node.$$hashKey]})},n.zTree.toggle=function(e){var n=o(e);n&&(n.$model.$collapsed?p(n):u(n))},n.options.useToggle||(n.zTree.expandAll=function(e){var n=o(e);l(n,function(e){e.$model.$collapsed=!1})},n.zTree.collapseAll=function(e){var n=o(e);l(n,function(e){e.$model.$collapsed=!0})});var o=function(e){return null===e||void 0===e?null:n.$nodeMap[e.$$hashKey]},t=function(e,n){if(void 0!==e&&null!==e)for(var o=e.$parentNodeScope,t=o.$nodeChildren.length,r=0;t>r;r++){var l=n(o.$nodeChildren[r]);if("return"===l)return l}},r=function(e,n){if(void 0!==e&&null!==e)for(var o=e.$nodeChildren.length,t=0;o>t;t++){var r=n(e.$nodeChildren[t]);if("return"===r)return r}},l=function(e,n){var o=n(e);return"return"===o?o:r(e,function(e){return l(e,n)})},c=function(e,o){var t=e.$parentNodeScope;t!==n&&(o(t),c(t,o))},d=function(e,o){o||(o=n);var t=null;return l(o,function(n){return n===e?(t=n,"return"):void 0}),t},a=function(e){return 0===e.$nodeChildren.length},i=function(e){return void 0!=d(o(n.currentSelect),e)?!0:!1},u=function(e){i(e)&&(n.hasSelectNodeScope=e),e.$model.$collapsed=!0},p=function(e){e.$model.$collapsed&&(n.options.useToggle&&t(e,function(n){n!==e&&u(n)}),e.$parentNodeScope.$model&&p(e.$parentNodeScope),a(e)||(e.$model.$collapsed=!1))}}],compile:function(e,n,o){return function(e,n,t,r){e.transclude=o}}}}]).directive("zTreeNode",["$compile","$templateCache","treeConfig",function(e,n,o){return{restrict:"AE",scope:!0,controller:function(){var t=n.get(o.templateUrl);this.template=e(t)},link:function(e,n,o,t){t.template(e,function(e){n.html("").append(e)})}}}]).directive("zTreeTransclude",function(){return{require:"^zTree",link:function(e,n,o,t){var r=t.$treeRootScope;e.transcludeScope=r.$parent.$new(),e.transcludeScope.$nodeChildren=[],e.transcludeScope.$parentNodeScope=e.$parent.$parent,e.transcludeScope.node=e.node,e.transcludeScope.options=r.options,e.transcludeScope.$model={$collapsed:!0,$hasSelect:!1,$selected:!1,$nodeLevel:e.$parent.$parent.$model?e.$parent.$model.$nodeLevel+1:1},e.transcludeScope.$parentNodeScope.$nodeChildren.push(e.transcludeScope),e.$on("$destroy",function(){e.transcludeScope.$destroy()}),r.$nodeMap[e.node.$$hashKey]=e.transcludeScope,r.transclude(e.transcludeScope,function(e){n.html("").append(e)})}}}),angular.module("z.angular.tree").run(["$templateCache",function(e){e.put("zangular/template/zTreeTemplate.html",'<ul class="nav"><li ng-repeat="node in node[options.childrenField]" class="z-tree-node"><div z-tree-transclude=""></div></li></ul>')}]);